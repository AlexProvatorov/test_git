GIT

1)Что такое git? Для чего он нужен? Что хранится в git?
    Распределенная система контроля версий кода созданная Линусом Торвальдсом для управления разаботкой
    ядра Линукс. Нужен для командной разработки, дает возмодность работать над одинаковыми файлами -
    разными разрабами одновременно + сохраняет историю изменений, что дает возможность откатится назад.
    Код хрантися в репозиториях(удаленных и локальных), который содержит все файлы проекта и историю 
    проекта.

2)Что такое origin?
    Git "origin" - это сокращенное имя удаленного репозитория, из которого изначально был клонирован
    проект. Точнее, он используется вместо URL - адреса исходного репозитория и тем самым значительно
    упрощает ссылки.

3)Как проиндексировать изменения?
    git add файл
    Индекс – файл, в котором содержатся изменения, подготовленные для добавления в коммит. Вы можете
    добавлять и убирать файлы из индекса.

4)Как посмотреть какие файлы будут добавлены в новый коммит?
    git status
    git status -s (сокращенный вывод)

5)Как добавить изменения в коммит? Какие изменения туда попадут? Как добавить коммиту сообщение?
    git add файл - индексируем изменения
    git commit -m "сообщение"

6)Опишите два способа создания репозитория.
    1)Взять локальный каталог, который не находится под версионным контролем, и превратить его в
    репозиторий Git:
        -перейти в каталог с проектом, выполнить git init имя_опционально
    2)Клонировать существующий репозиторий Git из любого места:
        -git clone url имя_опционально

7)Где в проекте хранятся все данные для работы с git? Где хранятся глобальные настройки?
    В скрытой папке .git хранятся все файлы для работы с гит.
        -Системные. Представляют собой настройки на уровне всей системы, то есть они 
         распространяются на всех пользователей. Файл с этими настройками хранится по 
         следующему пути: /etc/gitconfig
        -Глобальные. Эти настройки одинаковы для всех репозиториев, созданных под вашим 
        пользователем. Среди них есть, например, имя ветки по умолчанию. Файл с этими 
        параметрами хранятся по следующему адресу: ~/.gitconfig
        -Локальные. Это настройки на уровне репозитория, они не будут применяться к другим вашим
        проектам. Эти параметры хранятся в каждом вашем репозитории по адресу: .git/config

8)Для чего нужен .gitignore? Какие файлы и папки нужно в него добавлять и зачем?
    это файл в котором мы указываем файлы или каталоги которые мы не хотим отслеживать в проекте.
    Например: файлы сборки проекта(обьектные и архивные .0 или .а), логи, временные файлы, 
    виртуальное окружение.

9)Как добавить папку в gitignore? Как добавить файл с определенным именем в gitignore?
    -вписать путь к папке из каталога проекта со слешем в конце
    - файл.тхт - игнорить все встреченные файлы с таким именем и расширением
     /путь/файл.тхт - игнорить такой файл по такому пути

10)Как сделать так, чтобы в текущем проекте коммиты создавались с именем Test Tester и email@tester.com?
    Как сделать так, чтобы это происходило во всех новых проектах, где это не задано локально?
    -Указать имя пользователя и почту глобально или для репозитория или указывать их для каждой 
     операции commit вручную.

11)Как залить наши новые коммиты в удаленный репозиторий?
    git config --global user.email "you@example.com" - аутентификация
    git config --global user.name "Ваше Имя" - аутентификация
    git commit -m "Сообщение с описанием"
    Далее необходимо настроить соединение с удаленной репой, для это:
    git remote add origin git@github.com:AlexProvatorov/test_git.git - тут можно по ссш или по управления
    git push -u origin main - заливаем репозиторий на удаленную репу

12)Как подтянуть свежие изменения с удаленного репозитория?
    git fetch origin опционально_имя_ветки- подтягивает изменения но не сливает вместе(не мержит)
    git pull - подтягивает изменения и пытаеться мержить

13)Как создать новую ветку и сразу перейти на нее? Как перейти обратно в master?
    git checkout -b имя_новой_ветки
    git branch master

14)Как посмотреть список веток и в какой мы сейчас находимся?
    git branch 

15)Как соединять ветки? Почему возникают конфликты и как их решать?
    git mearge имя_ветки -находясь в мейн
    Конфликты возникают, если изменения сделаны в одном и том же файле и они затрагивают друг друга.
    При попытке мержа вылезет ошибка, в конфликтующие файлы Git добавляет специальные маркеры 
    конфликтов, чтобы вы могли исправить их вручную. После исправления получится замержить.

16)Какие виды соединения веток вы знаете?
    